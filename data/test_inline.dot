// CFG analysis for test_inline
// Generated from data/test_inline.hbc

digraph {
  rankdir=TB;
  node [shape=box, fontname="monospace"];

  subgraph cluster_function_0 {
    label = "Function 0";
    style = filled;
    color = lightgrey;

    edge [fontname="Arial"];

    f0_n0 [ label = "Block 0 (PC 0-9)\l  0: DeclareGlobalVar  \"testInlining\"\l  1: CreateEnvironment r0\l  2: CreateClosure     r1, r0, Function<testInlining>1\l  3: GetGlobalObject   r0\l  4: PutById           r0, r1, 1, \"testInlining\"\l  5: GetByIdShort      r1, r0, 1, \"testInlining\"\l  6: LoadConstUndefined r0\l  7: Call1             r0, r1, r0\l  8: Ret               r0\l" ]
    f0_n1 [ label = "EXIT" ]

    f0_n0 -> f0_n1 [label="Uncond"]
  }

  subgraph cluster_function_1 {
    label = "Function 1";
    style = filled;
    color = lightgrey;

    edge [fontname="Arial"];

    f1_n0 [ label = "Block 0 (PC 0-23)\l  0: GetGlobalObject   r0\l  1: TryGetById        r2, r0, 1, \"console\"\l  2: GetByIdShort      r1, r2, 2, \"log\"\l  3: LoadConstUInt8    r3, 5\l  4: Call2             r1, r1, r2, r3\l  5: TryGetById        r4, r0, 1, \"console\"\l  6: GetByIdShort      r1, r4, 2, \"log\"\l  7: LoadConstString   r2, \"hello\"\l  8: Call2             r1, r1, r4, r2\l  9: TryGetById        r4, r0, 1, \"console\"\l  10: GetByIdShort      r1, r4, 2, \"log\"\l  11: LoadConstTrue     r0\l  12: Call2             r0, r1, r4, r0\l  13: NewObject         r1\l  14: CreateEnvironment r0\l  15: CreateClosure     r0, r0, Function<method>2\l  16: PutNewOwnByIdShort r1, r0, \"method\"\l  17: GetByIdShort      r0, r1, 3, \"method\"\l  18: Call2             r0, r0, r1, r3\l  19: GetByIdShort      r0, r1, 3, \"method\"\l  20: Call2             r0, r0, r1, r2\l  21: LoadConstUInt8    r0, 15\l  22: Ret               r0\l" ]
    f1_n1 [ label = "EXIT" ]

    f1_n0 -> f1_n1 [label="Uncond"]
  }

  subgraph cluster_function_2 {
    label = "Function 2";
    style = filled;
    color = lightgrey;

    edge [fontname="Arial"];

    f2_n0 [ label = "Block 0 (PC 0-2)\l  0: LoadParam         r0, 1\l  1: Ret               r0\l" ]
    f2_n1 [ label = "EXIT" ]

    f2_n0 -> f2_n1 [label="Uncond"]
  }

}
