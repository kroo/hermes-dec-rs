// CFG analysis for regex_test
// Generated from data/regex_test.hbc

// Function 0
digraph {
    0 [ label = "Block 0 (PC 0-191):\n  0: DeclareGlobalVar  "run"\n  1: LoadConstUndefined r6\n  2: LoadConstUndefined r7\n  3: LoadConstUndefined r8\n  4: LoadConstUndefined r9\n  5: CreateEnvironment r0\n  6: CreateClosure     r0, r0, Function<run>1\n  7: GetGlobalObject   r5\n  8: PutById           r5, r0, 1, "run"\n  9: LoadConstString   r0, "use strict"\n  10: NewArrayWithBuffer r2, 3, 1, 0\n  11: CreateRegExp      r1, "\d+", "", 0\n  12: PutOwnByIndex     r2, r1, 1\n  13: LoadConstString   r1, "12345"\n  14: PutOwnByIndex     r2, r1, 2\n  15: NewArray          r1, 29\n  16: PutOwnByIndex     r1, r2, 0\n  17: NewArrayWithBuffer r2, 3, 1, 3\n  18: CreateRegExp      r3, "\b[A-Za-z]+\b", "", 1\n  19: PutOwnByIndex     r2, r3, 1\n  20: LoadConstString   r3, "hello"\n  21: PutOwnByIndex     r2, r3, 2\n  22: PutOwnByIndex     r1, r2, 1\n  23: NewArrayWithBuffer r2, 3, 1, 5\n  24: CreateRegExp      r3, "^[\w.+-]+@[\w.-]+\.[A-Za-z]{2,}$", "", 2\n  25: PutOwnByIndex     r2, r3, 1\n  26: LoadConstString   r3, "me@example.com"\n  27: PutOwnByIndex     r2, r3, 2\n  28: PutOwnByIndex     r1, r2, 2\n  29: NewArrayWithBuffer r2, 3, 1, 7\n  30: CreateRegExp      r3, "^(?:https?):\/\/(www\.)?[^\s/$.?#].[^\s]*$", "i", 3\n  31: PutOwnByIndex     r2, r3, 1\n  32: LoadConstString   r3, "https://example.org/path"\n  33: PutOwnByIndex     r2, r3, 2\n  34: PutOwnByIndex     r1, r2, 3\n  35: NewArrayWithBuffer r2, 3, 1, 9\n  36: CreateRegExp      r3, "^(\d{1,3}\.){3}\d{1,3}$", "", 4\n  37: PutOwnByIndex     r2, r3, 1\n  38: LoadConstString   r3, "192.168.0.42"\n  39: PutOwnByIndex     r2, r3, 2\n  40: PutOwnByIndex     r1, r2, 4\n  41: NewArrayWithBuffer r2, 3, 1, 11\n  42: CreateRegExp      r3, "^([0-9a-f]{2}:){5}[0-9a-f]{2}$", "i", 5\n  43: PutOwnByIndex     r2, r3, 1\n  44: LoadConstString   r3, "aa:bb:cc:dd:ee:ff"\n  45: PutOwnByIndex     r2, r3, 2\n  46: PutOwnByIndex     r1, r2, 5\n  47: NewArrayWithBuffer r2, 3, 1, 13\n  48: CreateRegExp      r3, "^(?:\+?1\s*(?:[.-]\s*)?)?(?:\(\s*\d{3}\s*\)|\d{3})\s*(?:[.-]\s*)?\d{3}\s*(?:[.-]\s*)?\d{4}$", "", 6\n  49: PutOwnByIndex     r2, r3, 1\n  50: LoadConstString   r3, "(123)-456-7890"\n  51: PutOwnByIndex     r2, r3, 2\n  52: PutOwnByIndex     r1, r2, 6\n  53: NewArrayWithBuffer r2, 3, 1, 15\n  54: CreateRegExp      r3, "^\s+|\s+$", "g", 7\n  55: PutOwnByIndex     r2, r3, 1\n  56: LoadConstString   r3, "  padded  "\n  57: PutOwnByIndex     r2, r3, 2\n  58: PutOwnByIndex     r1, r2, 7\n  59: NewArrayWithBuffer r2, 3, 1, 17\n  60: CreateRegExp      r3, "(\w)\1+", "", 8\n  61: PutOwnByIndex     r2, r3, 1\n  62: LoadConstString   r3, "boooook"\n  63: PutOwnByIndex     r2, r3, 2\n  64: PutOwnByIndex     r1, r2, 8\n  65: NewArrayWithBuffer r2, 3, 1, 19\n  66: CreateRegExp      r3, "(a(b(c)))\3\2\1", "", 9\n  67: PutOwnByIndex     r2, r3, 1\n  68: LoadConstString   r3, "abccba"\n  69: PutOwnByIndex     r2, r3, 2\n  70: PutOwnByIndex     r1, r2, 9\n  71: CreateRegExp      r3, "^(?<year>\d{4})-(?<month>\d{2})-(?<day>\d{2})$", "", 10\n  72: NewObjectWithBuffer r18, 3, 3, 0, 0\n  73: Mov               r19, r3\n  74: CallBuiltin       r2, 50, 3\n  75: NewArrayWithBuffer r2, 3, 1, 21\n  76: PutOwnByIndex     r2, r3, 1\n  77: LoadConstString   r3, "2023-04-01"\n  78: PutOwnByIndex     r2, r3, 2\n  79: PutOwnByIndex     r1, r2, 10\n  80: NewArrayWithBuffer r2, 3, 1, 23\n  81: CreateRegExp      r3, "(?<=foo)\w+", "", 11\n  82: PutOwnByIndex     r2, r3, 1\n  83: LoadConstString   r3, "foobarbaz"\n  84: PutOwnByIndex     r2, r3, 2\n  85: PutOwnByIndex     r1, r2, 11\n  86: NewArrayWithBuffer r2, 3, 1, 25\n  87: CreateRegExp      r3, "(?<!\d)\d{3}(?!\d)", "", 12\n  88: PutOwnByIndex     r2, r3, 1\n  89: LoadConstString   r3, "abc123def"\n  90: PutOwnByIndex     r2, r3, 2\n  91: PutOwnByIndex     r1, r2, 12\n  92: NewArrayWithBuffer r2, 3, 1, 27\n  93: CreateRegExp      r3, "(?:(?!abc).)*", "s", 13\n  94: PutOwnByIndex     r2, r3, 1\n  95: LoadConstString   r3, "xyzabc"\n  96: PutOwnByIndex     r2, r3, 2\n  97: PutOwnByIndex     r1, r2, 13\n  98: NewArrayWithBuffer r2, 3, 1, 29\n  99: CreateRegExp      r3, "\p{Emoji_Presentation}", "u", 14\n  100: PutOwnByIndex     r2, r3, 1\n  101: LoadConstString   r3, "ðŸ˜€"\n  102: PutOwnByIndex     r2, r3, 2\n  103: PutOwnByIndex     r1, r2, 14\n  104: NewArrayWithBuffer r2, 3, 1, 31\n  105: CreateRegExp      r4, "\u{1F600}", "u", 15\n  106: PutOwnByIndex     r2, r4, 1\n  107: PutOwnByIndex     r2, r3, 2\n  108: PutOwnByIndex     r1, r2, 15\n  109: NewArrayWithBuffer r2, 3, 1, 33\n  110: CreateRegExp      r3, "(?<=^|\s)#[\w]+\b", "", 16\n  111: PutOwnByIndex     r2, r3, 1\n  112: LoadConstString   r3, "tweet with #hashtag"\n  113: PutOwnByIndex     r2, r3, 2\n  114: PutOwnByIndex     r1, r2, 16\n  115: NewArrayWithBuffer r2, 3, 1, 35\n  116: CreateRegExp      r3, "(\d{1,3}(,\d{3})*)(\.\d+)?", "", 17\n  117: PutOwnByIndex     r2, r3, 1\n  118: LoadConstString   r3, "1,234,567.89"\n  119: PutOwnByIndex     r2, r3, 2\n  120: PutOwnByIndex     r1, r2, 17\n  121: NewArrayWithBuffer r2, 3, 1, 37\n  122: CreateRegExp      r3, "^(?!.*\b(cat|dog)\b).{6,}$", "i", 18\n  123: PutOwnByIndex     r2, r3, 1\n  124: LoadConstString   r3, "ilovecoffee"\n  125: PutOwnByIndex     r2, r3, 2\n  126: PutOwnByIndex     r1, r2, 18\n  127: NewArrayWithBuffer r2, 3, 1, 39\n  128: CreateRegExp      r3, "^.{0,5}$", "s", 19\n  129: PutOwnByIndex     r2, r3, 1\n  130: LoadConstString   r3, "abc"\n  131: PutOwnByIndex     r2, r3, 2\n  132: PutOwnByIndex     r1, r2, 19\n  133: NewArrayWithBuffer r2, 3, 1, 41\n  134: CreateRegExp      r3, "abc", "y", 20\n  135: PutOwnByIndex     r2, r3, 1\n  136: LoadConstString   r3, "abcabc"\n  137: PutOwnByIndex     r2, r3, 2\n  138: PutOwnByIndex     r1, r2, 20\n  139: NewArrayWithBuffer r2, 3, 1, 43\n  140: CreateRegExp      r3, "[A-Z]+", "g", 21\n  141: PutOwnByIndex     r2, r3, 1\n  142: LoadConstString   r3, "ABCdefGHI"\n  143: PutOwnByIndex     r2, r3, 2\n  144: PutOwnByIndex     r1, r2, 21\n  145: NewArrayWithBuffer r2, 3, 1, 45\n  146: CreateRegExp      r3, "a+", "gy", 22\n  147: PutOwnByIndex     r2, r3, 1\n  148: LoadConstString   r3, "aaaaa"\n  149: PutOwnByIndex     r2, r3, 2\n  150: PutOwnByIndex     r1, r2, 22\n  151: NewArrayWithBuffer r2, 3, 1, 47\n  152: CreateRegExp      r3, "(?:[0-9a-f]{1,4}:){7}[0-9a-f]{1,4}", "i", 23\n  153: PutOwnByIndex     r2, r3, 1\n  154: LoadConstString   r3, "2001:0db8:85a3:0000:0000:8a2e:0370:7334"\n  155: PutOwnByIndex     r2, r3, 2\n  156: PutOwnByIndex     r1, r2, 23\n  157: NewArrayWithBuffer r2, 3, 1, 49\n  158: CreateRegExp      r3, "^(?=\D*\d)(?=.*[A-Z])(?=.*[a-z]).{8,}$", "", 24\n  159: PutOwnByIndex     r2, r3, 1\n  160: LoadConstString   r3, "Abcdef1g"\n  161: PutOwnByIndex     r2, r3, 2\n  162: PutOwnByIndex     r1, r2, 24\n  163: NewArrayWithBuffer r2, 3, 1, 51\n  164: CreateRegExp      r3, "^\s*import\s+[\s\S]+?from\s+['"].+?['"];?$", "m", 25\n  165: PutOwnByIndex     r2, r3, 1\n  166: LoadConstString   r3, "import fs from 'node:fs';"\n  167: PutOwnByIndex     r2, r3, 2\n  168: PutOwnByIndex     r1, r2, 25\n  169: NewArrayWithBuffer r2, 3, 1, 53\n  170: CreateRegExp      r3, "^rgba?\(\s*(\d{1,3}%?\s*,\s*){2}\d{1,3}%?\s*(?:,\s*(0|1|0?\.\d+))?\)$", "", 26\n  171: PutOwnByIndex     r2, r3, 1\n  172: LoadConstString   r3, "rgba(255, 0, 0, 0.5)"\n  173: PutOwnByIndex     r2, r3, 2\n  174: PutOwnByIndex     r1, r2, 26\n  175: NewArrayWithBuffer r2, 3, 1, 55\n  176: CreateRegExp      r3, "foo\/bar", "", 27\n  177: PutOwnByIndex     r2, r3, 1\n  178: LoadConstString   r3, "foo/bar"\n  179: PutOwnByIndex     r2, r3, 2\n  180: PutOwnByIndex     r1, r2, 27\n  181: NewArrayWithBuffer r2, 3, 1, 57\n  182: CreateRegExp      r3, "[$_\p{ID_Start}][$_\u200C\u200D\p{ID_Continue}]*", "u", 28\n  183: PutOwnByIndex     r2, r3, 1\n  184: LoadConstString   r3, "Ï€Value"\n  185: PutOwnByIndex     r2, r3, 2\n  186: PutOwnByIndex     r1, r2, 28\n  187: Mov               r4, r1\n  188: IteratorBegin     r2, r4\n  189: LoadConstString   r3, ""\n  190: LoadConstString   r1, "  â€‘->  threw:"\n" ]
    1 [ label = "Block 1 (PC 191-194):\n  0: IteratorNext      r11, r2, r4\n  1: Mov               r10, r2\n  2: JStrictEqualLong  L1, r10, r6\n" ]
    2 [ label = "Block 2 (PC 194-203):\n  0: Mov               r13, r11\n  1: IteratorBegin     r10, r13\n  2: LoadConstUndefined r11\n  3: LoadConstUndefined r12\n  4: IteratorNext      r14, r10, r13\n  5: Mov               r15, r10\n  6: StrictEq          r15, r15, r6\n  7: Mov               r11, r15\n  8: JmpTrue           L2, r15\n" ]
    3 [ label = "Block 3 (PC 203-204):\n  0: Mov               r12, r14\n" ]
    4 [ label = "Block 4 (PC 204-208):\n  0: Mov               r7, r12\n  1: LoadConstUndefined r12\n  2: Mov               r14, r11\n  3: JmpTrue           L3, r14\n" ]
    5 [ label = "Block 5 (PC 208-213):\n  0: IteratorNext      r14, r10, r13\n  1: Mov               r15, r10\n  2: StrictEq          r15, r15, r6\n  3: Mov               r11, r15\n  4: JmpTrue           L3, r15\n" ]
    6 [ label = "Block 6 (PC 213-214):\n  0: Mov               r12, r14\n" ]
    7 [ label = "Block 7 (PC 214-218):\n  0: Mov               r8, r12\n  1: LoadConstUndefined r12\n  2: Mov               r14, r11\n  3: JmpTrue           L4, r14\n" ]
    8 [ label = "Block 8 (PC 218-223):\n  0: IteratorNext      r13, r10, r13\n  1: Mov               r14, r10\n  2: StrictEq          r14, r14, r6\n  3: Mov               r11, r14\n  4: JmpTrue           L4, r14\n" ]
    9 [ label = "Block 9 (PC 223-224):\n  0: Mov               r12, r13\n" ]
    10 [ label = "Block 10 (PC 224-226):\n  0: Mov               r9, r12\n  1: JmpTrue           L5, r11\n" ]
    11 [ label = "Block 11 (PC 226-227):\n  0: IteratorClose     r10, 0\n" ]
    12 [ label = "Block 12 (PC 227-233):\n  0: GetByIdShort      r13, r5, 1, "run"\n  1: Mov               r12, r7\n  2: Mov               r11, r8\n  3: Mov               r10, r9\n  4: Call4             r0, r13, r6, r12, r11, r10\n  5: Jmp               L6\n" ]
    13 [ label = "Block 13 (PC 233-234):\n  0: Catch             r10\n" ]
    14 [ label = "Block 14 (PC 234-243):\n  0: TryGetById        r11, r5, 2, "globalThis"\n  1: GetByIdShort      r13, r11, 3, "console"\n  2: GetByIdShort      r12, r13, 4, "error"\n  3: Mov               r14, r7\n  4: TryGetById        r11, r5, 5, "HermesInternal"\n  5: GetByIdShort      r11, r11, 6, "concat"\n  6: Call3             r11, r11, r3, r14, r1\n  7: GetByIdShort      r10, r10, 7, "message"\n  8: Call3             r0, r12, r13, r11, r10\n" ]
    15 [ label = "Block 15 (PC 243-244):\n  0: JmpLong           L7\n" ]
    16 [ label = "Block 16 (PC 244-245):\n  0: Catch             r1\n" ]
    17 [ label = "Block 17 (PC 245-246):\n  0: IteratorClose     r2, 1\n" ]
    18 [ label = "Block 18 (PC 246-247):\n  0: Throw             r1\n" ]
    19 [ label = "Block 19 (PC 247-248):\n  0: Ret               r0\n" ]
    20 [ label = "EXIT" ]
    0 -> 1 [ ]
    1 -> 19 [ ]
    1 -> 2 [ ]
    2 -> 4 [ ]
    2 -> 3 [ ]
    3 -> 4 [ ]
    4 -> 7 [ ]
    4 -> 5 [ ]
    5 -> 7 [ ]
    5 -> 6 [ ]
    6 -> 7 [ ]
    7 -> 10 [ ]
    7 -> 8 [ ]
    8 -> 10 [ ]
    8 -> 9 [ ]
    9 -> 10 [ ]
    10 -> 12 [ ]
    10 -> 11 [ ]
    11 -> 12 [ ]
    12 -> 15 [ ]
    13 -> 20 [ ]
    14 -> 15 [ ]
    15 -> 1 [ ]
    16 -> 20 [ ]
    17 -> 18 [ ]
    18 -> 20 [ ]
    19 -> 20 [ ]
}


// Function 1
digraph {
    0 [ label = "Block 0 (PC 0-26):\n  0: LoadParam         r6, 1\n  1: LoadParam         r9, 2\n  2: GetByIdShort      r1, r9, 1, "test"\n  3: LoadParam         r0, 3\n  4: Call2             r5, r1, r9, r0\n  5: GetGlobalObject   r1\n  6: TryGetById        r0, r1, 2, "globalThis"\n  7: GetByIdShort      r3, r0, 3, "console"\n  8: GetByIdShort      r2, r3, 4, "log"\n  9: GetByIdShort      r4, r6, 5, "padEnd"\n  10: LoadConstUInt8    r0, 20\n  11: Call2             r8, r4, r6, r0\n  12: TryGetById        r4, r1, 6, "String"\n  13: LoadConstUndefined r0\n  14: Call2             r5, r4, r0, r5\n  15: GetByIdShort      r4, r5, 7, "toUpperCase"\n  16: Call1             r12, r4, r5\n  17: TryGetById        r1, r1, 8, "HermesInternal"\n  18: GetByIdShort      r6, r1, 9, "concat"\n  19: LoadConstString   r15, ""\n  20: LoadConstString   r13, " : "\n  21: LoadConstString   r11, "  	â†’ "\n  22: Mov               r14, r8\n  23: Mov               r10, r9\n  24: Call              r1, r6, 6\n  25: Call2             r1, r2, r3, r1\n" ]
    1 [ label = "Block 1 (PC 26-27):\n  0: Ret               r0\n" ]
    2 [ label = "EXIT" ]
    0 -> 1 [ ]
    1 -> 2 [ ]
}


