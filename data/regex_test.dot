// CFG analysis for regex_test
// Generated from data/regex_test.hbc

digraph {
  rankdir=TB;
  node [shape=box, fontname="monospace"];

  subgraph cluster_function_0 {
    label = "Function 0";
    style = filled;
    color = lightgrey;

    edge [fontname="Arial"];

    f0_n0 [ label = "Block 0 (PC 0-191)\l  0: DeclareGlobalVar  \"run\"\l  1: LoadConstUndefined r6\l  2: LoadConstUndefined r7\l  3: LoadConstUndefined r8\l  4: LoadConstUndefined r9\l  5: CreateEnvironment r0\l  6: CreateClosure     r0, r0, Function<run>1\l  7: GetGlobalObject   r5\l  8: PutById           r5, r0, 1, \"run\"\l  9: LoadConstString   r0, \"use strict\"\l  10: NewArrayWithBuffer r2, 3, 1, 0\l  11: CreateRegExp      r1, \"\d+\", \"\", 0\l  12: PutOwnByIndex     r2, r1, 1\l  13: LoadConstString   r1, \"12345\"\l  14: PutOwnByIndex     r2, r1, 2\l  15: NewArray          r1, 29\l  16: PutOwnByIndex     r1, r2, 0\l  17: NewArrayWithBuffer r2, 3, 1, 3\l  18: CreateRegExp      r3, \"\b[A-Za-z]+\b\", \"\", 1\l  19: PutOwnByIndex     r2, r3, 1\l  20: LoadConstString   r3, \"hello\"\l  21: PutOwnByIndex     r2, r3, 2\l  22: PutOwnByIndex     r1, r2, 1\l  23: NewArrayWithBuffer r2, 3, 1, 5\l  24: CreateRegExp      r3, \"^[\w.+-]+@[\w.-]+\.[A-Za-z]{2,}$\", \"\", 2\l  25: PutOwnByIndex     r2, r3, 1\l  26: LoadConstString   r3, \"me@example.com\"\l  27: PutOwnByIndex     r2, r3, 2\l  28: PutOwnByIndex     r1, r2, 2\l  29: NewArrayWithBuffer r2, 3, 1, 7\l  30: CreateRegExp      r3, \"^(?:https?):\/\/(www\.)?[^\s/$.?#].[^\s]*$\", \"i\", 3\l  31: PutOwnByIndex     r2, r3, 1\l  32: LoadConstString   r3, \"https://example.org/path\"\l  33: PutOwnByIndex     r2, r3, 2\l  34: PutOwnByIndex     r1, r2, 3\l  35: NewArrayWithBuffer r2, 3, 1, 9\l  36: CreateRegExp      r3, \"^(\d{1,3}\.){3}\d{1,3}$\", \"\", 4\l  37: PutOwnByIndex     r2, r3, 1\l  38: LoadConstString   r3, \"192.168.0.42\"\l  39: PutOwnByIndex     r2, r3, 2\l  40: PutOwnByIndex     r1, r2, 4\l  41: NewArrayWithBuffer r2, 3, 1, 11\l  42: CreateRegExp      r3, \"^([0-9a-f]{2}:){5}[0-9a-f]{2}$\", \"i\", 5\l  43: PutOwnByIndex     r2, r3, 1\l  44: LoadConstString   r3, \"aa:bb:cc:dd:ee:ff\"\l  45: PutOwnByIndex     r2, r3, 2\l  46: PutOwnByIndex     r1, r2, 5\l  47: NewArrayWithBuffer r2, 3, 1, 13\l  48: CreateRegExp      r3, \"^(?:\+?1\s*(?:[.-]\s*)?)?(?:\(\s*\d{3}\s*\)|\d{3})\s*(?:[.-]\s*)?\d{3}\s*(?:[.-]\s*)?\d{4}$\", \"\", 6\l  49: PutOwnByIndex     r2, r3, 1\l  50: LoadConstString   r3, \"(123)-456-7890\"\l  51: PutOwnByIndex     r2, r3, 2\l  52: PutOwnByIndex     r1, r2, 6\l  53: NewArrayWithBuffer r2, 3, 1, 15\l  54: CreateRegExp      r3, \"^\s+|\s+$\", \"g\", 7\l  55: PutOwnByIndex     r2, r3, 1\l  56: LoadConstString   r3, \"  padded  \"\l  57: PutOwnByIndex     r2, r3, 2\l  58: PutOwnByIndex     r1, r2, 7\l  59: NewArrayWithBuffer r2, 3, 1, 17\l  60: CreateRegExp      r3, \"(\w)\1+\", \"\", 8\l  61: PutOwnByIndex     r2, r3, 1\l  62: LoadConstString   r3, \"boooook\"\l  63: PutOwnByIndex     r2, r3, 2\l  64: PutOwnByIndex     r1, r2, 8\l  65: NewArrayWithBuffer r2, 3, 1, 19\l  66: CreateRegExp      r3, \"(a(b(c)))\3\2\1\", \"\", 9\l  67: PutOwnByIndex     r2, r3, 1\l  68: LoadConstString   r3, \"abccba\"\l  69: PutOwnByIndex     r2, r3, 2\l  70: PutOwnByIndex     r1, r2, 9\l  71: CreateRegExp      r3, \"^(?<year>\d{4})-(?<month>\d{2})-(?<day>\d{2})$\", \"\", 10\l  72: NewObjectWithBuffer r18, 3, 3, 0, 0\l  73: Mov               r19, r3\l  74: CallBuiltin       r2, "HermesBuiltin.initRegexNamedGroups", 3\l  75: NewArrayWithBuffer r2, 3, 1, 21\l  76: PutOwnByIndex     r2, r3, 1\l  77: LoadConstString   r3, \"2023-04-01\"\l  78: PutOwnByIndex     r2, r3, 2\l  79: PutOwnByIndex     r1, r2, 10\l  80: NewArrayWithBuffer r2, 3, 1, 23\l  81: CreateRegExp      r3, \"(?<=foo)\w+\", \"\", 11\l  82: PutOwnByIndex     r2, r3, 1\l  83: LoadConstString   r3, \"foobarbaz\"\l  84: PutOwnByIndex     r2, r3, 2\l  85: PutOwnByIndex     r1, r2, 11\l  86: NewArrayWithBuffer r2, 3, 1, 25\l  87: CreateRegExp      r3, \"(?<!\d)\d{3}(?!\d)\", \"\", 12\l  88: PutOwnByIndex     r2, r3, 1\l  89: LoadConstString   r3, \"abc123def\"\l  90: PutOwnByIndex     r2, r3, 2\l  91: PutOwnByIndex     r1, r2, 12\l  92: NewArrayWithBuffer r2, 3, 1, 27\l  93: CreateRegExp      r3, \"(?:(?!abc).)*\", \"s\", 13\l  94: PutOwnByIndex     r2, r3, 1\l  95: LoadConstString   r3, \"xyzabc\"\l  96: PutOwnByIndex     r2, r3, 2\l  97: PutOwnByIndex     r1, r2, 13\l  98: NewArrayWithBuffer r2, 3, 1, 29\l  99: CreateRegExp      r3, \"\p{Emoji_Presentation}\", \"u\", 14\l  100: PutOwnByIndex     r2, r3, 1\l  101: LoadConstString   r3, \"ðŸ˜€\"\l  102: PutOwnByIndex     r2, r3, 2\l  103: PutOwnByIndex     r1, r2, 14\l  104: NewArrayWithBuffer r2, 3, 1, 31\l  105: CreateRegExp      r4, \"\u{1F600}\", \"u\", 15\l  106: PutOwnByIndex     r2, r4, 1\l  107: PutOwnByIndex     r2, r3, 2\l  108: PutOwnByIndex     r1, r2, 15\l  109: NewArrayWithBuffer r2, 3, 1, 33\l  110: CreateRegExp      r3, \"(?<=^|\s)#[\w]+\b\", \"\", 16\l  111: PutOwnByIndex     r2, r3, 1\l  112: LoadConstString   r3, \"tweet with #hashtag\"\l  113: PutOwnByIndex     r2, r3, 2\l  114: PutOwnByIndex     r1, r2, 16\l  115: NewArrayWithBuffer r2, 3, 1, 35\l  116: CreateRegExp      r3, \"(\d{1,3}(,\d{3})*)(\.\d+)?\", \"\", 17\l  117: PutOwnByIndex     r2, r3, 1\l  118: LoadConstString   r3, \"1,234,567.89\"\l  119: PutOwnByIndex     r2, r3, 2\l  120: PutOwnByIndex     r1, r2, 17\l  121: NewArrayWithBuffer r2, 3, 1, 37\l  122: CreateRegExp      r3, \"^(?!.*\b(cat|dog)\b).{6,}$\", \"i\", 18\l  123: PutOwnByIndex     r2, r3, 1\l  124: LoadConstString   r3, \"ilovecoffee\"\l  125: PutOwnByIndex     r2, r3, 2\l  126: PutOwnByIndex     r1, r2, 18\l  127: NewArrayWithBuffer r2, 3, 1, 39\l  128: CreateRegExp      r3, \"^.{0,5}$\", \"s\", 19\l  129: PutOwnByIndex     r2, r3, 1\l  130: LoadConstString   r3, \"abc\"\l  131: PutOwnByIndex     r2, r3, 2\l  132: PutOwnByIndex     r1, r2, 19\l  133: NewArrayWithBuffer r2, 3, 1, 41\l  134: CreateRegExp      r3, \"abc\", \"y\", 20\l  135: PutOwnByIndex     r2, r3, 1\l  136: LoadConstString   r3, \"abcabc\"\l  137: PutOwnByIndex     r2, r3, 2\l  138: PutOwnByIndex     r1, r2, 20\l  139: NewArrayWithBuffer r2, 3, 1, 43\l  140: CreateRegExp      r3, \"[A-Z]+\", \"g\", 21\l  141: PutOwnByIndex     r2, r3, 1\l  142: LoadConstString   r3, \"ABCdefGHI\"\l  143: PutOwnByIndex     r2, r3, 2\l  144: PutOwnByIndex     r1, r2, 21\l  145: NewArrayWithBuffer r2, 3, 1, 45\l  146: CreateRegExp      r3, \"a+\", \"gy\", 22\l  147: PutOwnByIndex     r2, r3, 1\l  148: LoadConstString   r3, \"aaaaa\"\l  149: PutOwnByIndex     r2, r3, 2\l  150: PutOwnByIndex     r1, r2, 22\l  151: NewArrayWithBuffer r2, 3, 1, 47\l  152: CreateRegExp      r3, \"(?:[0-9a-f]{1,4}:){7}[0-9a-f]{1,4}\", \"i\", 23\l  153: PutOwnByIndex     r2, r3, 1\l  154: LoadConstString   r3, \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\l  155: PutOwnByIndex     r2, r3, 2\l  156: PutOwnByIndex     r1, r2, 23\l  157: NewArrayWithBuffer r2, 3, 1, 49\l  158: CreateRegExp      r3, \"^(?=\D*\d)(?=.*[A-Z])(?=.*[a-z]).{8,}$\", \"\", 24\l  159: PutOwnByIndex     r2, r3, 1\l  160: LoadConstString   r3, \"Abcdef1g\"\l  161: PutOwnByIndex     r2, r3, 2\l  162: PutOwnByIndex     r1, r2, 24\l  163: NewArrayWithBuffer r2, 3, 1, 51\l  164: CreateRegExp      r3, \"^\s*import\s+[\s\S]+?from\s+['\"].+?['\"];?$\", \"m\", 25\l  165: PutOwnByIndex     r2, r3, 1\l  166: LoadConstString   r3, \"import fs from 'node:fs';\"\l  167: PutOwnByIndex     r2, r3, 2\l  168: PutOwnByIndex     r1, r2, 25\l  169: NewArrayWithBuffer r2, 3, 1, 53\l  170: CreateRegExp      r3, \"^rgba?\(\s*(\d{1,3}%?\s*,\s*){2}\d{1,3}%?\s*(?:,\s*(0|1|0?\.\d+))?\)$\", \"\", 26\l  171: PutOwnByIndex     r2, r3, 1\l  172: LoadConstString   r3, \"rgba(255, 0, 0, 0.5)\"\l  173: PutOwnByIndex     r2, r3, 2\l  174: PutOwnByIndex     r1, r2, 26\l  175: NewArrayWithBuffer r2, 3, 1, 55\l  176: CreateRegExp      r3, \"foo\/bar\", \"\", 27\l  177: PutOwnByIndex     r2, r3, 1\l  178: LoadConstString   r3, \"foo/bar\"\l  179: PutOwnByIndex     r2, r3, 2\l  180: PutOwnByIndex     r1, r2, 27\l  181: NewArrayWithBuffer r2, 3, 1, 57\l  182: CreateRegExp      r3, \"[$_\p{ID_Start}][$_\u200C\u200D\p{ID_Continue}]*\", \"u\", 28\l  183: PutOwnByIndex     r2, r3, 1\l  184: LoadConstString   r3, \"Ï€Value\"\l  185: PutOwnByIndex     r2, r3, 2\l  186: PutOwnByIndex     r1, r2, 28\l  187: Mov               r4, r1\l  188: IteratorBegin     r2, r4\l  189: LoadConstString   r3, \"\"\l  190: LoadConstString   r1, \"  â€‘->  threw:\"\l" ]
    f0_n1 [ label = "Block 1 (PC 191-194) [L7]\l  0: IteratorNext      r11, r2, r4\l  1: Mov               r10, r2\l  2: JStrictEqualLong  L1, r10, r6\l" ]
    f0_n2 [ label = "Block 2 (PC 194-203) [L10]\l  0: Mov               r13, r11\l  1: IteratorBegin     r10, r13\l  2: LoadConstUndefined r11\l  3: LoadConstUndefined r12\l  4: IteratorNext      r14, r10, r13\l  5: Mov               r15, r10\l  6: StrictEq          r15, r15, r6\l  7: Mov               r11, r15\l  8: JmpTrue           L2, r15\l" ]
    f0_n3 [ label = "Block 3 (PC 203-204)\l  0: Mov               r12, r14\l" ]
    f0_n4 [ label = "Block 4 (PC 204-208) [L2]\l  0: Mov               r7, r12\l  1: LoadConstUndefined r12\l  2: Mov               r14, r11\l  3: JmpTrue           L3, r14\l" ]
    f0_n5 [ label = "Block 5 (PC 208-213)\l  0: IteratorNext      r14, r10, r13\l  1: Mov               r15, r10\l  2: StrictEq          r15, r15, r6\l  3: Mov               r11, r15\l  4: JmpTrue           L3, r15\l" ]
    f0_n6 [ label = "Block 6 (PC 213-214)\l  0: Mov               r12, r14\l" ]
    f0_n7 [ label = "Block 7 (PC 214-218) [L3]\l  0: Mov               r8, r12\l  1: LoadConstUndefined r12\l  2: Mov               r14, r11\l  3: JmpTrue           L4, r14\l" ]
    f0_n8 [ label = "Block 8 (PC 218-223)\l  0: IteratorNext      r13, r10, r13\l  1: Mov               r14, r10\l  2: StrictEq          r14, r14, r6\l  3: Mov               r11, r14\l  4: JmpTrue           L4, r14\l" ]
    f0_n9 [ label = "Block 9 (PC 223-224)\l  0: Mov               r12, r13\l" ]
    f0_n10 [ label = "Block 10 (PC 224-226) [L4]\l  0: Mov               r9, r12\l  1: JmpTrue           L5, r11\l" ]
    f0_n11 [ label = "Block 11 (PC 226-227)\l  0: IteratorClose     r10, 0\l" ]
    f0_n12 [ label = "Block 12 (PC 227-232) [L5]\l  0: GetByIdShort      r13, r5, 1, \"run\"\l  1: Mov               r12, r7\l  2: Mov               r11, r8\l  3: Mov               r10, r9\l  4: Call4             r0, r13, r6, r12, r11, r10\l" ]
    f0_n13 [ label = "Block 13 (PC 232-233) [L8]\l  0: Jmp               L6\l" ]
    f0_n14 [ label = "Block 14 (PC 233-243) [L9]\l  0: Catch             r10\l  1: TryGetById        r11, r5, 2, \"globalThis\"\l  2: GetByIdShort      r13, r11, 3, \"console\"\l  3: GetByIdShort      r12, r13, 4, \"error\"\l  4: Mov               r14, r7\l  5: TryGetById        r11, r5, 5, \"HermesInternal\"\l  6: GetByIdShort      r11, r11, 6, \"concat\"\l  7: Call3             r11, r11, r3, r14, r1\l  8: GetByIdShort      r10, r10, 7, \"message\"\l  9: Call3             r0, r12, r13, r11, r10\l" ]
    f0_n15 [ label = "Block 15 (PC 243-244) [L6]\l  0: JmpLong           L7\l" ]
    f0_n16 [ label = "Block 16 (PC 244-247) [L11]\l  0: Catch             r1\l  1: IteratorClose     r2, 1\l  2: Throw             r1\l" ]
    f0_n17 [ label = "Block 17 (PC 247-248) [L1]\l  0: Ret               r0\l" ]
    f0_n18 [ label = "EXIT" ]

    f0_n0 -> f0_n1 [label="Fall"]
    f0_n1 -> f0_n17 [label="True"]
    f0_n1 -> f0_n2 [label="False"]
    f0_n2 -> f0_n4 [label="True"]
    f0_n2 -> f0_n3 [label="False"]
    f0_n3 -> f0_n4 [label="Fall"]
    f0_n4 -> f0_n7 [label="True"]
    f0_n4 -> f0_n5 [label="False"]
    f0_n5 -> f0_n7 [label="True"]
    f0_n5 -> f0_n6 [label="False"]
    f0_n6 -> f0_n7 [label="Fall"]
    f0_n7 -> f0_n10 [label="True"]
    f0_n7 -> f0_n8 [label="False"]
    f0_n8 -> f0_n10 [label="True"]
    f0_n8 -> f0_n9 [label="False"]
    f0_n9 -> f0_n10 [label="Fall"]
    f0_n10 -> f0_n12 [label="True"]
    f0_n10 -> f0_n11 [label="False"]
    f0_n11 -> f0_n12 [label="Fall"]
    f0_n12 -> f0_n13 [label="Fall"]
    f0_n13 -> f0_n15 [label="Uncond"]
    f0_n14 -> f0_n15 [label="Fall"]
    f0_n15 -> f0_n1 [label="Uncond"]
    f0_n16 -> f0_n18 [label="Uncond"]
    f0_n17 -> f0_n18 [label="Uncond"]
    f0_n12 -> f0_n14 [label="Exception"]
    f0_n2 -> f0_n16 [label="Exception"]
    f0_n3 -> f0_n16 [label="Exception"]
    f0_n4 -> f0_n16 [label="Exception"]
    f0_n5 -> f0_n16 [label="Exception"]
    f0_n6 -> f0_n16 [label="Exception"]
    f0_n7 -> f0_n16 [label="Exception"]
    f0_n8 -> f0_n16 [label="Exception"]
    f0_n9 -> f0_n16 [label="Exception"]
    f0_n10 -> f0_n16 [label="Exception"]
    f0_n11 -> f0_n16 [label="Exception"]
    f0_n12 -> f0_n16 [label="Exception"]
    f0_n13 -> f0_n16 [label="Exception"]
    f0_n14 -> f0_n16 [label="Exception"]
  }

  subgraph cluster_function_1 {
    label = "Function 1";
    style = filled;
    color = lightgrey;

    edge [fontname="Arial"];

    f1_n0 [ label = "Block 0 (PC 0-27)\l  0: LoadParam         r6, 1\l  1: LoadParam         r9, 2\l  2: GetByIdShort      r1, r9, 1, \"test\"\l  3: LoadParam         r0, 3\l  4: Call2             r5, r1, r9, r0\l  5: GetGlobalObject   r1\l  6: TryGetById        r0, r1, 2, \"globalThis\"\l  7: GetByIdShort      r3, r0, 3, \"console\"\l  8: GetByIdShort      r2, r3, 4, \"log\"\l  9: GetByIdShort      r4, r6, 5, \"padEnd\"\l  10: LoadConstUInt8    r0, 20\l  11: Call2             r8, r4, r6, r0\l  12: TryGetById        r4, r1, 6, \"String\"\l  13: LoadConstUndefined r0\l  14: Call2             r5, r4, r0, r5\l  15: GetByIdShort      r4, r5, 7, \"toUpperCase\"\l  16: Call1             r12, r4, r5\l  17: TryGetById        r1, r1, 8, \"HermesInternal\"\l  18: GetByIdShort      r6, r1, 9, \"concat\"\l  19: LoadConstString   r15, \"\"\l  20: LoadConstString   r13, \" : \"\l  21: LoadConstString   r11, \"  	â†’ \"\l  22: Mov               r14, r8\l  23: Mov               r10, r9\l  24: Call              r1, r6, 6\l  25: Call2             r1, r2, r3, r1\l  26: Ret               r0\l" ]
    f1_n1 [ label = "EXIT" ]

    f1_n0 -> f1_n1 [label="Uncond"]
  }

}
