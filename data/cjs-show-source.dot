// CFG analysis for cjs-show-source
// Generated from data/cjs-show-source.hbc

// Function 0
digraph {
    0 [ label = "Block 0 (PC 0-2):\n  0: LoadConstUndefined r0\n  1: AsyncBreakCheck   \n" ]
    1 [ label = "Block 1 (PC 2-3):\n  0: Ret               r0\n" ]
    2 [ label = "EXIT" ]
    0 -> 1 [ ]
    1 -> 2 [ ]
}


// Function 1
digraph {
    0 [ label = "Block 0 (PC 0-9):\n  0: CreateEnvironment r0\n  1: LoadParam         r5, 2\n  2: CreateClosure     r4, r0, Function<assert>2\n  3: GetGlobalObject   r2\n  4: GetByIdShort      r1, r2, 1, "print"\n  5: TypeOf            r3, r1\n  6: LoadConstString   r1, "function"\n  7: AsyncBreakCheck   \n  8: JStrictEqual      L1, r3, r1\n" ]
    1 [ label = "Block 1 (PC 9-14):\n  0: TryGetById        r3, r2, 2, "globalThis"\n  1: TryGetById        r1, r2, 2, "globalThis"\n  2: GetByIdShort      r1, r1, 3, "console"\n  3: GetByIdShort      r1, r1, 4, "log"\n  4: PutById           r3, r1, 1, "print"\n" ]
    2 [ label = "Block 2 (PC 14-62):\n  0: TryGetById        r6, r2, 1, "print"\n  1: LoadConstUndefined r1\n  2: LoadConstString   r3, "Starting Hermes CJS smoke test …"\n  3: Call2             r3, r6, r1, r3\n  4: LoadConstString   r3, "math"\n  5: Call2             r8, r5, r1, r3\n  6: GetByIdShort      r9, r8, 5, "add"\n  7: LoadConstUInt8    r7, 2\n  8: LoadConstUInt8    r6, 3\n  9: Call3             r10, r9, r8, r7, r6\n  10: LoadConstUInt8    r9, 5\n  11: StrictEq          r10, r10, r9\n  12: LoadConstString   r9, "add() should add"\n  13: Call3             r9, r4, r1, r10, r9\n  14: GetByIdShort      r11, r8, 6, "mul"\n  15: LoadConstUInt8    r10, 6\n  16: LoadConstUInt8    r9, 7\n  17: Call3             r10, r11, r8, r10, r9\n  18: LoadConstUInt8    r9, 42\n  19: StrictEq          r10, r10, r9\n  20: LoadConstString   r9, "mul() should multiply"\n  21: Call3             r9, r4, r1, r10, r9\n  22: Call2             r3, r5, r1, r3\n  23: StrictEq          r8, r3, r8\n  24: LoadConstString   r3, "require cache"\n  25: Call3             r3, r4, r1, r8, r3\n  26: LoadConstString   r3, "path"\n  27: Call2             r8, r5, r1, r3\n  28: TryGetById        r3, r2, 2, "globalThis"\n  29: GetByIdShort      r3, r3, 7, "__dirname"\n  30: GetByIdShort      r5, r8, 8, "dirname"\n  31: TryGetById        r2, r2, 2, "globalThis"\n  32: GetByIdShort      r2, r2, 9, "__filename"\n  33: Call2             r2, r5, r8, r2\n  34: StrictEq          r3, r3, r2\n  35: LoadConstString   r2, "__dirname works"\n  36: Call3             r2, r4, r1, r3, r2\n  37: CreateClosure     r5, r0, Function<spreadSum>3\n  38: LoadConstUInt8    r15, 1\n  39: LoadConstUInt8    r12, 4\n  40: LoadConstUndefined r16\n  41: Mov               r14, r7\n  42: Mov               r13, r6\n  43: Call              r3, r5, 5\n  44: LoadConstUInt8    r2, 10\n  45: StrictEq          r3, r3, r2\n  46: LoadConstString   r2, "arrow + rest/spread"\n  47: Call3             r2, r4, r1, r3, r2\n" ]
    3 [ label = "Block 3 (PC 62-63):\n  0: Ret               r1\n" ]
    4 [ label = "EXIT" ]
    0 -> 2 [ ]
    0 -> 1 [ ]
    1 -> 2 [ ]
    2 -> 3 [ ]
    3 -> 4 [ ]
}


// Function 2
digraph {
    0 [ label = "Block 0 (PC 0-4):\n  0: LoadParam         r2, 2\n  1: LoadParam         r0, 1\n  2: AsyncBreakCheck   \n  3: JmpTrueLong       L1, r0\n" ]
    1 [ label = "Block 1 (PC 4-9):\n  0: GetGlobalObject   r0\n  1: GetByIdShort      r1, r0, 1, "print"\n  2: TypeOf            r1, r1\n  3: LoadConstString   r3, "function"\n  4: JStrictEqual      L2, r1, r3\n" ]
    2 [ label = "Block 2 (PC 9-13):\n  0: TryGetById        r1, r0, 2, "globalThis"\n  1: GetByIdShort      r1, r1, 3, "console"\n  2: GetByIdShort      r5, r1, 4, "log"\n  3: Jmp               L3\n" ]
    3 [ label = "Block 3 (PC 13-14):\n  0: TryGetById        r5, r0, 1, "print"\n" ]
    4 [ label = "Block 4 (PC 14-22):\n  0: LoadConstString   r1, "Assertion failed ‑ "\n  1: Add               r4, r1, r2\n  2: LoadConstUndefined r1\n  3: Call2             r1, r5, r1, r4\n  4: TryGetById        r1, r0, 2, "globalThis"\n  5: GetByIdShort      r1, r1, 5, "quit"\n  6: TypeOf            r1, r1\n  7: JStrictEqual      L4, r1, r3\n" ]
    5 [ label = "Block 5 (PC 22-27):\n  0: TryGetById        r1, r0, 2, "globalThis"\n  1: GetByIdShort      r1, r1, 6, "process"\n  2: TypeOf            r3, r1\n  3: LoadConstString   r1, "undefined"\n  4: JStrictEqual      L5, r3, r1\n" ]
    6 [ label = "Block 6 (PC 27-33):\n  0: TryGetById        r1, r0, 2, "globalThis"\n  1: GetByIdShort      r4, r1, 6, "process"\n  2: GetByIdShort      r3, r4, 7, "exit"\n  3: LoadConstUInt8    r1, 1\n  4: Call2             r1, r3, r4, r1\n  5: Jmp               L5\n" ]
    7 [ label = "Block 7 (PC 33-37):\n  0: TryGetById        r4, r0, 2, "globalThis"\n  1: GetByIdShort      r3, r4, 5, "quit"\n  2: LoadConstUInt8    r1, 1\n  3: Call2             r1, r3, r4, r1\n" ]
    8 [ label = "Block 8 (PC 37-44):\n  0: TryGetById        r0, r0, 8, "Error"\n  1: GetByIdShort      r1, r0, 9, "prototype"\n  2: CreateThis        r1, r1, r0\n  3: Mov               r7, r1\n  4: Mov               r6, r2\n  5: Construct         r0, r0, 2\n  6: SelectObject      r0, r1, r0\n" ]
    9 [ label = "Block 9 (PC 44-45):\n  0: Throw             r0\n" ]
    10 [ label = "Block 10 (PC 45-46):\n  0: LoadConstUndefined r0\n" ]
    11 [ label = "Block 11 (PC 46-47):\n  0: Ret               r0\n" ]
    12 [ label = "EXIT" ]
    0 -> 10 [ ]
    0 -> 1 [ ]
    1 -> 3 [ ]
    1 -> 2 [ ]
    2 -> 4 [ ]
    3 -> 4 [ ]
    4 -> 7 [ ]
    4 -> 5 [ ]
    5 -> 8 [ ]
    5 -> 6 [ ]
    6 -> 8 [ ]
    7 -> 8 [ ]
    8 -> 9 [ ]
    9 -> 12 [ ]
    10 -> 11 [ ]
    11 -> 12 [ ]
}


// Function 3
digraph {
    0 [ label = "Block 0 (PC 0-8):\n  0: LoadConstZero     r4\n  1: LoadConstZero     r6\n  2: CallBuiltin       r3, 45, 2\n  3: GetByIdShort      r2, r3, 1, "reduce"\n  4: CreateEnvironment r0\n  5: CreateClosure     r1, r0, Function<>4\n  6: Call3             r1, r2, r3, r1, r4\n  7: AsyncBreakCheck   \n" ]
    1 [ label = "Block 1 (PC 8-9):\n  0: Ret               r1\n" ]
    2 [ label = "EXIT" ]
    0 -> 1 [ ]
    1 -> 2 [ ]
}


// Function 4
digraph {
    0 [ label = "Block 0 (PC 0-4):\n  0: LoadParam         r1, 1\n  1: LoadParam         r0, 2\n  2: Add               r0, r1, r0\n  3: AsyncBreakCheck   \n" ]
    1 [ label = "Block 1 (PC 4-5):\n  0: Ret               r0\n" ]
    2 [ label = "EXIT" ]
    0 -> 1 [ ]
    1 -> 2 [ ]
}


// Function 5
digraph {
    0 [ label = "Block 0 (PC 0-10):\n  0: CreateEnvironment r0\n  1: CreateClosure     r2, r0, Function<add>7\n  2: LoadParam         r1, 1\n  3: PutById           r1, r2, 1, "add"\n  4: LoadParam         r1, 3\n  5: GetByIdShort      r2, r1, 1, "exports"\n  6: CreateClosure     r1, r0, Function<mul>6\n  7: PutById           r2, r1, 2, "mul"\n  8: LoadConstUndefined r1\n  9: AsyncBreakCheck   \n" ]
    1 [ label = "Block 1 (PC 10-11):\n  0: Ret               r1\n" ]
    2 [ label = "EXIT" ]
    0 -> 1 [ ]
    1 -> 2 [ ]
}


// Function 6
digraph {
    0 [ label = "Block 0 (PC 0-4):\n  0: LoadParam         r1, 1\n  1: LoadParam         r0, 2\n  2: Mul               r0, r1, r0\n  3: AsyncBreakCheck   \n" ]
    1 [ label = "Block 1 (PC 4-5):\n  0: Ret               r0\n" ]
    2 [ label = "EXIT" ]
    0 -> 1 [ ]
    1 -> 2 [ ]
}


// Function 7
digraph {
    0 [ label = "Block 0 (PC 0-4):\n  0: LoadParam         r1, 1\n  1: LoadParam         r0, 2\n  2: Add               r0, r1, r0\n  3: AsyncBreakCheck   \n" ]
    1 [ label = "Block 1 (PC 4-5):\n  0: Ret               r0\n" ]
    2 [ label = "EXIT" ]
    0 -> 1 [ ]
    1 -> 2 [ ]
}


